{"version":3,"sources":["components/header/NavBar.js","components/body/find/Search.js","components/body/find/ColonSeperatedRenderer.js","components/body/find/SearchGrid.js","components/body/find/Find.js","components/body/compare/Grapher.js","components/body/compare/CompareGrid.js","components/body/compare/Compare.js","components/body/Body.js","components/tokenize.js","components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","marginleft","marginright","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","SearchAppBar","props","classes","className","AppBar","Toolbar","Typography","variant","noWrap","Search","searchTerm","setSearchTerm","TextField","fullWidth","margin","onChange","event","target","value","label","InputProps","endAdornment","InputAdornment","ColonSeperatedRenderer","textFormatter","colorGenerator","this","formattedElements","style","flexWrap","map","e","text","Chip","key","size","marginBottom","React","PureComponent","SearchGrid","index","columnDefs","headerName","field","filter","floatingFilter","dndSource","menuTabs","cellRenderer","cellRendererParams","elements","split","fullname","autoHeight","splitElements","seasonLetterMap","Fall","Spring","Summer","season","year","seasonLetter","twoDigitYear","substring","element","firstNumIndex","S","Su","F","hide","gridRef","useRef","useEffect","gridApi","current","api","filterModel","getFilterModel","filterType","type","setFilterModel","ref","rowModelType","onGridReady","params","dataSource","getRows","filters","Object","entries","query","bool","globalFilterModel","results","length","fieldResults","globalResults","intersection","successCallback","setDatasource","defaultColDef","resizable","filterParams","debounceMs","suppressMenu","floatingFilterComponentParams","suppressFilterButton","rowHeight","frameworkComponents","colonSeperatedRenderer","Find","Grid","container","item","xs","gradeTypes","a2","a3","b1","b2","b3","c1","c2","c3","d1","d2","d3","f","Grapher","selectedClass","useState","graphData","setGraphData","processSections","sections","console","log","dataLetterGrade","x","y","reduce","accumulator","section","course_name","course_nbr","course_dept","course_prof","sectionData","paddingTop","xType","data","textAlign","href","setRowData","rowData","rowSelection","onRowSelected","Compare","setSelectedClass","onDragOver","dataTransfer","types","dropEffect","preventDefault","onDrop","isIE","window","navigator","userAgent","indexOf","jsonData","getData","JSON","parse","id","bind","align","CompareGrid","Body","getSubstrings","s","tokens","i","push","slice","FlexSearch","require","serializedIndex","profile","doc","sems","profs","dept","tokenize","replace","import","undefined","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"ml0nZAOMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAM,aACJJ,SAAU,EACVK,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,OAAO,aACLC,SAAU,WACVJ,QAAS,QACTK,WAAY,OACZC,YAAa,OACbC,aAAcd,EAAMe,MAAMD,aAC1BE,gBAAiBC,YAAKjB,EAAMkB,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKjB,EAAMkB,QAAQC,OAAOC,MAAO,MAEpDC,WAAY,EACZC,MAAO,QACNtB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BY,WAAYrB,EAAMK,QAAQ,GAC1BiB,MAAO,SAGXC,WAAY,CACVD,MAAOtB,EAAMK,QAAQ,GACrBmB,OAAQ,OACRb,SAAU,WACVc,cAAe,OACflB,QAAS,OACTmB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,WAETC,WAAW,aACTC,QAAS/B,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAChC2B,WAAYhC,EAAMiC,YAAYC,OAAO,SACrCZ,MAAO,QACNtB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5Ba,MAAO,IACP,UAAW,CACTA,MAAO,WAMA,SAASa,EAAaC,GACnC,IAAMC,EAAUvC,IAEhB,OACE,yBAAKwC,UAAWD,EAAQpC,MACtB,kBAACsC,EAAA,EAAD,CAAQ5B,SAAS,UACf,kBAAC6B,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAYH,UAAWD,EAAQ/B,MAAOoC,QAAQ,KAAKC,QAAM,GAAzD,gB,wDCnEK,SAASC,EAAOR,GAAO,IAG5BS,EAA8BT,EAA9BS,WAAYC,EAAkBV,EAAlBU,cAEpB,OACE,kBAACC,EAAA,EAAD,CAEEC,WAAS,EACTC,OAAO,SACPC,SAAU,SAACC,GACTL,EAAcK,EAAMC,OAAOC,QAE7BA,MAAOR,EACPH,QAAQ,WACRY,MAAM,SACNC,WAAY,CACVC,aACE,kBAACC,EAAA,EAAD,CAAgB9C,SAAS,OACvB,kBAAC,IAAD,U,2ECpBS+C,E,kDACnB,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,cAAgBvB,EAAMuB,cAC3B,EAAKC,eAAiBxB,EAAMwB,eAHX,E,qDAMT,IAAD,OACCP,EAAUQ,KAAKzB,MAAfiB,MAEFS,EAAoBD,KAAKF,cAC3BE,KAAKF,cAAcN,GACnBA,EAEJ,OACE,yBAAKU,MAAO,CAAEzC,MAAO,OAAQ0C,SAAU,OAAQzD,QAAS,SACrDuD,EACEG,KAAI,SAACC,GAAD,MAAQ,CACXC,KAAMD,EACNrC,MAAO,EAAK+B,eAAiB,EAAKA,eAAeM,GAAK,SAEvDD,KAAI,gBAAEE,EAAF,EAAEA,KAAMtC,EAAR,EAAQA,MAAR,OACH,kBAACuC,EAAA,EAAD,CACEC,IAAKF,EACLb,MAAOa,EACPG,KAAK,QACLP,MAAO,CAAEQ,aAAc,MAAOvD,gBAAiBa,a,GA1BT2C,IAAMC,eCuK3CC,EAjKI,SAACtC,GAAW,IACrBS,EAAsBT,EAAtBS,WAAY8B,EAAUvC,EAAVuC,MAEdC,EAAa,CACjB,CACEC,WAAY,cACZC,MAAO,cACPC,QAAQ,EACRC,gBAAgB,EAChBC,WAAW,EACX3D,MAAO,KAET,CACEuD,WAAY,OACZC,MAAO,OACPC,QAAQ,EACRC,gBAAgB,EAChB1D,MAAO,KAET,CACEuD,WAAY,WACZC,MAAO,aACPC,QAAQ,EACRC,gBAAgB,EAChB1D,MAAO,IACP4D,SAAU,IAEZ,CACEL,WAAY,YACZC,MAAO,QACPC,QAAQ,EACRC,gBAAgB,EAChBG,aAAc,yBACdC,mBAAoB,CAElBzB,cAAe,SAAC0B,GAEd,OADsBA,EAAWA,EAASC,MAAM,KAAO,IAClCrB,KAAI,SAACsB,GAAD,OAAcA,EAASD,MAAM,KAAK,QAG/DE,YAAY,GAEd,CACEX,WAAY,WACZC,MAAO,OACPC,QAAQ,EACRC,gBAAgB,EAChBG,aAAc,yBACdC,mBAAoB,CAClBzB,cAAe,SAAC0B,GACd,IAAMI,EAAgBJ,EAAWA,EAASC,MAAM,KAAO,GAEjDI,EAAkB,CACtBC,KAAM,IACNC,OAAQ,IACRC,OAAQ,MAGV,OAAOJ,EAAcxB,KAAI,SAACC,GAAO,IAAD,EACPA,EAAEoB,MAAM,KADD,mBACvBQ,EADuB,KACfC,EADe,KAGxBC,EAAeN,EAAgBI,IAAWA,EAC1CG,EAAeF,EAAKG,UAAU,EAAG,GAEvC,MAAM,GAAN,OAAUF,GAAV,OAAyBC,OAG7BrC,eAAgB,SAACuC,GACf,IAAMC,EAAgBD,EAAQzF,OAAO,MAGrC,MACE,CAAE2F,EAAG,UAAWC,GAAI,UAAWC,EAAG,WAHfJ,EAAQD,UAAU,EAAGE,KAGuB,MAKvE,CACEvB,WAAY,SACZC,MAAO,SACP0B,MAAM,EACNzB,QAAQ,IAIN0B,EAAUjC,IAAMkC,OAAO,MAE7BlC,IAAMmC,WAAU,WACd,IAAMC,EAAUH,EAAQI,QAAQC,IAE5BC,EAAcH,EAAQI,iBAC1BD,EAAW,OAAa,CACtBE,WAAY,OACZC,KAAM,WACNnC,OAAQlC,GAGV+D,EAAQO,eAAeJ,KACtB,CAAClE,IAmCJ,OACE,yBACEP,UAAU,oBACVyB,MAAO,CAAEvC,OAAQ,OAAQF,MAAO,SAEhC,kBAAC,cAAD,CACE8F,IAAKX,EACL7B,WAAYA,EACZyC,aAAa,WACbC,YA1Cc,SAACC,GACnB,IAAIC,EAAa,CACfC,QAAS,SAACF,GAAY,IACZR,EAAgBQ,EAAhBR,YAEFW,EAAUC,OAAOC,QAAQb,GAC5BhC,QAAO,mCAAED,EAAF,gBAA0B,WAAVA,KACvBb,KAAI,YAAiB,IAAD,mBACnB,MAAO,CAAEa,MADU,KACH+C,MADG,KACM9C,OAAQ+C,KAAM,UAGrCC,EAAoBhB,EAAW,OAEjCiB,EAAU,GAEd,GAAIN,EAAQO,OAAS,GAAKF,EAAmB,CAC3C,IAAMG,EAAevD,EAAMjE,OAAOgH,GAC5BS,EAAgBxD,EAAMjE,OAAOqH,EAAkBhD,QAErDiD,EAAUI,uBAAaF,EAAcC,QAErCH,EADSD,EACCpD,EAAMjE,OAAOqH,EAAkBhD,QAE/BJ,EAAMjE,OAAOgH,GAGzBH,EAAOc,gBAAgBL,EAASA,EAAQC,UAI5CV,EAAOT,IAAIwB,cAAcd,IAarBe,cAAe,CACbC,WAAW,EACXC,aAAc,CACZC,WAAY,GAEdC,cAAc,EACdzD,SAAU,GACV0D,8BAA+B,CAAEC,sBAAsB,IAEzDC,UAAW,GACXC,oBAAqB,CACnBC,uBAAwBtF,OC5InBuF,EAlBF,SAAC7G,GAAW,IACfuC,EAAqCvC,EAArCuC,MAAO9B,EAA8BT,EAA9BS,WAAYC,EAAkBV,EAAlBU,cAE3B,OACE,6BACE,6BACA,kBAACoG,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,CAAQxG,WAAYA,EAAYC,cAAeA,IAC/C,kBAAC,EAAD,CAAYD,WAAYA,EAAY8B,MAAOA,KAE7C,kBAACuE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,O,QCWjBC,EAAa,CACjBC,GAAI,IACJC,GAAI,KACJC,GAAI,KACJC,GAAI,IACJC,GAAI,KACJC,GAAI,KACJC,GAAI,IACJC,GAAI,KACJC,GAAI,KACJC,GAAI,IACJC,GAAI,KACJC,EAAG,KAwFUC,EArFC,SAAC/H,GAAW,IAClBgI,EAAkBhI,EAAlBgI,cADiB,EAGS5F,IAAM6F,SAAS,IAHxB,mBAGlBC,EAHkB,KAGPC,EAHO,KAKnBC,EAAkB,SAACC,GAkBvB,OAhBAC,QAAQC,IAAIF,GACI9C,OAAOC,QAAQ0B,GAAYrF,KACzC,YAA4C,IAAD,mBAAzC2G,EAAyC,KACzC,MAAO,CAGLC,EAJuC,KAKvCC,EAAGL,EAASM,QACV,SAACC,EAAaC,GAAd,OACED,GAAeC,EAAQL,IAAoB,KAC7C,QA+BV,OAtBApG,IAAMmC,WAAU,WACd,GAAIyD,EAAe,CAAC,IAEhBc,EAKEd,EALFc,YACAC,EAIEf,EAJFe,WACAC,EAGEhB,EAHFgB,YACAC,EAEEjB,EAFFiB,YACAZ,EACEL,EADFK,SAGFC,QAAQC,IAAIP,GAEZG,EAAa,CACXW,cACAC,aACAC,cACAC,cACAC,YAAad,EAAgBC,QAGhC,CAACL,IAGF,6BACE,yBACErG,MAAO,CACLxD,QAAS,OACTmB,WAAY,SACZC,eAAgB,SAChB4J,WAAY,QAGd,kBAAC,IAAD,CAAQ/J,OAAQ,IAAKF,MAAO,IAAKkK,MAAM,WACrC,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAmBC,KAAMnB,EAAUgB,gBAGvC,yBAAKvH,MAAO,CAAE2H,UAAW,WACvB,4BACGpB,EAAUc,YADb,IAC2Bd,EAAUa,WADrC,IACkD,IAC/Cb,EAAUY,aAEb,2BAAIZ,EAAUe,aACd,6BACA,6BACA,6BACA,qFACA,+CACoB,IAClB,uBAAGM,KAAK,6CAAR,mB,QCpGJ/G,EAAU,CACd,CACEC,WAAY,YACZC,MAAO,OACPC,QAAQ,EACRC,gBAAgB,GAElB,CACEH,WAAY,WACZC,MAAO,MACPC,QAAQ,EACRC,gBAAgB,EAChB1D,MAAO,MAZK,mBAeXqG,OAAOC,QA9BO,CACjB2B,GAAI,IACJC,GAAI,KACJC,GAAI,KACJC,GAAI,IACJC,GAAI,KACJC,GAAI,KACJC,GAAI,IACJC,GAAI,KACJC,GAAI,KACJC,GAAI,IACJC,GAAI,KACJC,EAAG,MAkB2BjG,KAAI,YAA4C,IAAD,mBAAzC2G,EAAyC,KAC3E,MAAO,CACL/F,WAFyE,KAGzEC,MAAO8F,EACP7F,QAAQ,EACRzD,MAAO,SAsCEoD,EAjCI,SAACtC,GAAW,IACrBgI,EAAkBhI,EAAlBgI,cAEF3D,EAAUjC,IAAMkC,SAUtB,OARAlC,IAAMmC,WAAU,WACd,GAAIyD,EAAe,CACjB,IAAMxD,EAAUH,EAAQI,QAAQC,IAChC4D,QAAQC,IAAIP,GACZxD,EAAQgF,WAAWxB,EAAcK,aAElC,CAACL,IAGF,kBAAC,cAAD,CACEhD,IAAKX,EACL7B,WAAYA,EACZiH,QAAS,GACTtD,cAAe,CACbC,WAAW,EACXC,aAAc,CACZC,WAAY,GAEdC,cAAc,EACdzD,SAAU,GACV0D,8BAA+B,CAAEC,sBAAsB,IAEzDiD,aAAa,SACbC,cAAe,SAAC7H,GAAD,OAAOwG,QAAQC,IAAIzG,OCZzB8H,EAzDC,SAAC5J,GAAW,IAAD,EACiBoC,IAAM6F,SAAS,MADhC,mBAClBD,EADkB,KACH6B,EADG,KA6BzB,OACE,yBACE3J,UAAU,oBACVyB,MAAO,CAAEvC,OAAQ,MAAOF,MAAO,QAC/B4K,WA9BiB,SAAC/I,GACEA,EAAMgJ,aAAaC,MAAMnE,SAG7C9E,EAAMgJ,aAAaE,WAAa,OAChClJ,EAAMmJ,mBA0BNC,OAtBa,SAACpJ,GAChBA,EAAMmJ,iBACN,IACME,EADYC,OAAOC,UAAUC,UACZC,QAAQ,aAAe,EACxCC,EAAW1J,EAAMgJ,aAAaW,QAClCN,EAAO,OAAS,oBAEZf,EAAOsB,KAAKC,MAAMH,GAGnBpB,GAAmB,MAAXA,EAAKwB,IAIlBhB,EAAiBR,IAQEyB,U,IAEjB,kBAAChE,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,6BACA,kBAAC5G,EAAA,EAAD,CAAY0K,MAAM,SAASzK,QAAQ,MAAnC,gBAGA,6BACA,kBAAC0K,EAAD,CAAahD,cAAeA,IAE5B,kBAAC3H,EAAA,EAAD,CAAY0K,MAAM,SAASzK,QAAQ,MAAnC,SAGA,kBAAC,EAAD,CAAS0H,cAAeA,KAE1B,kBAAClB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,OC9BRgE,EApBF,SAACjL,GAAW,IAAD,EACcoC,IAAM6F,SAAS,IAD7B,mBACfxH,EADe,KACHC,EADG,KAEd6B,EAAUvC,EAAVuC,MAER,OACE,kBAACuE,EAAA,EAAD,CAAMC,WAAS,EAACpF,MAAO,CAAEvC,OAAQ,SAC/B,kBAAC0H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CACE1E,MAAOA,EACP9B,WAAYA,EACZC,cAAeA,KAGnB,kBAACoG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CAAS1E,MAAOA,EAAO9B,WAAYA,OCpB9ByK,EAAgB,SAACC,GAE5B,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAIF,EAAEtF,SAAUwF,EAAGD,EAAOE,KAAKH,EAAEI,MAAM,EAAGF,IAE1D,OAAOD,GCGHI,EAAaC,EAAQ,KACvBC,EAAkBD,EAAQ,KAExBlJ,EAAQ,IAAIiJ,EAAW,CAC3BG,QAAS,UACTC,IAAK,CACHf,GAAI,KACJnI,MAAO,CACLoG,YAAa,GACb+C,KAAM,GACNC,MAAO,GACP/C,WAAY,GACZgD,KAAM,CAACC,SAAU,SAACb,GAAD,OAAOD,EAAcC,EAAEc,QAAQ,IAAK,OACrD5D,SAAU,OAKhB9F,EAAM2J,OAAOR,GAGbA,OAAkBS,EAYHC,MAVf,WAEE,OACE,yBAAKlM,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMqC,MAAOA,MCvBC8J,QACW,cAA7BhC,OAAOiC,SAASC,UAEe,UAA7BlC,OAAOiC,SAASC,UAEhBlC,OAAOiC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBtC,WACrBA,UAAUuC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.178a87f0.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    display: 'block',\n    marginleft: 'auto',\n    marginright: 'auto',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n}));\n\nexport default function SearchAppBar(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            UT Enzyme\n          </Typography>\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from \"react\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nexport default function Search(props) {\n  // const classes = useStyles();\n\n  const { searchTerm, setSearchTerm } = props;\n\n  return (\n    <TextField\n      // classes={classes}\n      fullWidth\n      margin=\"normal\"\n      onChange={(event) => {\n        setSearchTerm(event.target.value);\n      }}\n      value={searchTerm}\n      variant=\"outlined\"\n      label=\"Search\"\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { Chip } from \"@material-ui/core\";\n\nexport default class ColonSeperatedRenderer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.textFormatter = props.textFormatter;\n    this.colorGenerator = props.colorGenerator;\n  }\n\n  render() {\n    const { value } = this.props;\n\n    const formattedElements = this.textFormatter\n      ? this.textFormatter(value)\n      : value;\n\n    return (\n      <div style={{ width: \"110%\", flexWrap: \"wrap\", display: \"flex\" }}>\n        {formattedElements\n          .map((e) => ({\n            text: e,\n            color: this.colorGenerator ? this.colorGenerator(e) : null,\n          }))\n          .map(({text, color}) => (\n            <Chip\n              key={text}\n              label={text}\n              size=\"small\"\n              style={{ marginBottom: \"2px\", backgroundColor: color }}\n            />\n          ))}\n      </div>\n    );\n  }\n}","import React from \"react\";\n\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\nimport { intersection } from \"lodash\";\n\nimport ColonSeperatedRenderer from \"./ColonSeperatedRenderer\";\n\nconst SearchGrid = (props) => {\n  const { searchTerm, index } = props;\n\n  const columnDefs = [\n    {\n      headerName: \"Course Name\",\n      field: \"course_name\",\n      filter: true,\n      floatingFilter: true,\n      dndSource: true,\n      width: 400,\n    },\n    {\n      headerName: \"Dept\",\n      field: \"dept\",\n      filter: true,\n      floatingFilter: true,\n      width: 100,\n    },\n    {\n      headerName: \"Course #\",\n      field: \"course_nbr\",\n      filter: true,\n      floatingFilter: true,\n      width: 150,\n      menuTabs: [],\n    },\n    {\n      headerName: \"Professor\",\n      field: \"profs\",\n      filter: true,\n      floatingFilter: true,\n      cellRenderer: \"colonSeperatedRenderer\",\n      cellRendererParams: {\n        // Get only lastname(s)\n        textFormatter: (elements) => {\n          const splitElements = elements ? elements.split(\";\") : [];\n          return splitElements.map((fullname) => fullname.split(\",\")[0]);\n        },\n      },\n      autoHeight: true,\n    },\n    {\n      headerName: \"Semester\",\n      field: \"sems\",\n      filter: true,\n      floatingFilter: true,\n      cellRenderer: \"colonSeperatedRenderer\",\n      cellRendererParams: {\n        textFormatter: (elements) => {\n          const splitElements = elements ? elements.split(\";\") : [];\n\n          const seasonLetterMap = {\n            Fall: \"F\",\n            Spring: \"S\",\n            Summer: \"Su\",\n          };\n\n          return splitElements.map((e) => {\n            const [season, year] = e.split(\" \");\n\n            const seasonLetter = seasonLetterMap[season] || season;\n            const twoDigitYear = year.substring(2, 5);\n\n            return `${seasonLetter}${twoDigitYear}`;\n          });\n        },\n        colorGenerator: (element) => {\n          const firstNumIndex = element.search(/\\d/);\n          const seasonPrefix = element.substring(0, firstNumIndex);\n\n          return (\n            { S: \"#a5d6a7\", Su: \"#ffecb3\", F: \"#ffa726\" }[seasonPrefix] || \"\"\n          );\n        },\n      },\n    },\n    {\n      headerName: \"global\",\n      field: \"global\",\n      hide: true,\n      filter: false,\n    },\n  ];\n\n  const gridRef = React.useRef(null);\n\n  React.useEffect(() => {\n    const gridApi = gridRef.current.api;\n\n    let filterModel = gridApi.getFilterModel();\n    filterModel[\"global\"] = {\n      filterType: \"text\",\n      type: \"contains\",\n      filter: searchTerm,\n    };\n\n    gridApi.setFilterModel(filterModel);\n  }, [searchTerm]);\n\n  const onGridReady = (params) => {\n    var dataSource = {\n      getRows: (params) => {\n        const { filterModel } = params;\n\n        const filters = Object.entries(filterModel)\n          .filter(([field, v]) => field !== \"global\")\n          .map(([field, v]) => {\n            return { field, query: v.filter, bool: \"and\" };\n          });\n\n        const globalFilterModel = filterModel[\"global\"];\n\n        let results = [];\n\n        if (filters.length > 0 && globalFilterModel) {\n          const fieldResults = index.search(filters);\n          const globalResults = index.search(globalFilterModel.filter);\n\n          results = intersection(fieldResults, globalResults);\n        } else if (globalFilterModel) {\n          results = index.search(globalFilterModel.filter);\n        } else {\n          results = index.search(filters);\n        }\n\n        params.successCallback(results, results.length);\n      },\n    };\n\n    params.api.setDatasource(dataSource);\n  };\n\n  return (\n    <div\n      className=\"ag-theme-material\"\n      style={{ height: \"50em\", width: \"100%\" }}\n    >\n      <AgGridReact\n        ref={gridRef}\n        columnDefs={columnDefs}\n        rowModelType=\"infinite\"\n        onGridReady={onGridReady}\n        defaultColDef={{\n          resizable: true,\n          filterParams: {\n            debounceMs: 0,\n          },\n          suppressMenu: true,\n          menuTabs: [],\n          floatingFilterComponentParams: { suppressFilterButton: true },\n        }}\n        rowHeight={55}\n        frameworkComponents={{\n          colonSeperatedRenderer: ColonSeperatedRenderer,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default SearchGrid;\n","import React from \"react\";\nimport Search from \"./Search\";\nimport SearchGrid from \"./SearchGrid\";\nimport { Grid } from \"@material-ui/core\";\n\nconst Find = (props) => {\n  const { index, searchTerm, setSearchTerm } = props;\n\n  return (\n    <div>\n      <br />\n      <Grid container>\n        <Grid item xs={1} />\n        <Grid item xs={10}>\n          <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n          <SearchGrid searchTerm={searchTerm} index={index} />\n        </Grid>\n        <Grid item xs={1} />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Find;\n","import React from \"react\";\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  VerticalGridLines,\n  VerticalBarSeries,\n} from \"react-vis\";\n\n//   if (searchTerm == null)\n//     return (\n//       <div style={{ textAlign: \"center\" }}>\n//         <br />\n//         <br />\n//         <h4>Enter in a course name above</h4>\n//         <br />\n//         <br />\n//         <br />\n//         <p>This is a prototype, and is not yet a finished product</p>\n//         <p>\n//           Compare speed to:{\" \"}\n//           <a href=\"http://utcatalyst.org/grade-distributions\">UT Catalyst</a>\n//         </p>\n//       </div>\n//     );\n\n// I could make a dictionary to map to all of this but I think this is easier to read\nconst gradeTypes = {\n  a2: \"A\",\n  a3: \"A-\",\n  b1: \"B+\",\n  b2: \"B\",\n  b3: \"B-\",\n  c1: \"C+\",\n  c2: \"C\",\n  c3: \"C-\",\n  d1: \"D+\",\n  d2: \"D\",\n  d3: \"D-\",\n  f: \"F\",\n};\n\nconst Grapher = (props) => {\n  const { selectedClass } = props;\n\n  const [graphData, setGraphData] = React.useState([]);\n\n  const processSections = (sections) => {\n    // These functional things are getting out of control\n    console.log(sections);\n    const newData = Object.entries(gradeTypes).map(\n      ([dataLetterGrade, displayLetterGrade]) => {\n        return {\n          // sum over all grade counts per key\n          // ex: a2: 500\n          x: displayLetterGrade,\n          y: sections.reduce(\n            (accumulator, section) =>\n              accumulator + (section[dataLetterGrade] || 0),\n            0\n          ),\n        };\n      }\n    );\n\n    return newData;\n  };\n\n  React.useEffect(() => {\n    if (selectedClass) {\n      const {\n        course_name,\n        course_nbr,\n        course_dept,\n        course_prof,\n        sections,\n      } = selectedClass;\n\n      console.log(selectedClass);\n\n      setGraphData({\n        course_name,\n        course_nbr,\n        course_dept,\n        course_prof,\n        sectionData: processSections(sections),\n      });\n    }\n  }, [selectedClass]);\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          paddingTop: \"2em\",\n        }}\n      >\n        <XYPlot height={250} width={800} xType=\"ordinal\">\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <VerticalBarSeries data={graphData.sectionData} />\n        </XYPlot>\n      </div>\n      <div style={{ textAlign: \"center\" }}>\n        <h4>\n          {graphData.course_dept} {graphData.course_nbr}:{\" \"}\n          {graphData.course_name}\n        </h4>\n        <p>{graphData.course_prof}</p>\n        <br />\n        <br />\n        <br />\n        <p>This is a prototype, and is not yet a finished product</p>\n        <p>\n          Compare speed to:{\" \"}\n          <a href=\"http://utcatalyst.org/grade-distributions\">UT Catalyst</a>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Grapher;\n","import React from \"react\";\n\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\n\nconst gradeTypes = {\n  a2: \"A\",\n  a3: \"A-\",\n  b1: \"B+\",\n  b2: \"B\",\n  b3: \"B-\",\n  c1: \"C+\",\n  c2: \"C\",\n  c3: \"C-\",\n  d1: \"D+\",\n  d2: \"D\",\n  d3: \"D-\",\n  f: \"F\",\n};\n\nconst columnDefs = [\n  {\n    headerName: \"Professor\",\n    field: \"prof\",\n    filter: true,\n    floatingFilter: true,\n  },\n  {\n    headerName: \"Semester\",\n    field: \"sem\",\n    filter: true,\n    floatingFilter: true,\n    width: 130,\n  },\n  // Turn each grade type above into a column\n  ...Object.entries(gradeTypes).map(([dataLetterGrade, displayLetterGrade]) => {\n    return {\n      headerName: displayLetterGrade,\n      field: dataLetterGrade,\n      filter: false,\n      width: 75,\n    };\n  }),\n];\n\nconst SearchGrid = (props) => {\n  const { selectedClass } = props;\n\n  const gridRef = React.useRef();\n\n  React.useEffect(() => {\n    if (selectedClass) {\n      const gridApi = gridRef.current.api;\n      console.log(selectedClass);\n      gridApi.setRowData(selectedClass.sections);\n    }\n  }, [selectedClass]);\n\n  return (\n    <AgGridReact\n      ref={gridRef}\n      columnDefs={columnDefs}\n      rowData={[]}\n      defaultColDef={{\n        resizable: true,\n        filterParams: {\n          debounceMs: 0,\n        },\n        suppressMenu: true,\n        menuTabs: [],\n        floatingFilterComponentParams: { suppressFilterButton: true },\n      }}\n      rowSelection=\"single\"\n      onRowSelected={(e) => console.log(e)}\n    />\n  );\n};\n\nexport default SearchGrid;\n","import React from \"react\";\nimport Grapher from \"./Grapher\";\nimport CompareGrid from \"./CompareGrid\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nconst Compare = (props) => {\n  const [selectedClass, setSelectedClass] = React.useState(null);\n\n  const gridDragOver = (event) => {\n    const dragSupported = event.dataTransfer.types.length;\n\n    if (dragSupported) {\n      event.dataTransfer.dropEffect = \"copy\";\n      event.preventDefault();\n    }\n  };\n\n  const gridDrop = (event) => {\n    event.preventDefault();\n    const userAgent = window.navigator.userAgent;\n    const isIE = userAgent.indexOf(\"Trident/\") >= 0;\n    const jsonData = event.dataTransfer.getData(\n      isIE ? \"text\" : \"application/json\"\n    );\n    const data = JSON.parse(jsonData);\n\n    // if data missing or data has no it, do nothing\n    if (!data || data.id == null) {\n      return;\n    }\n\n    setSelectedClass(data);\n  };\n\n  return (\n    <div\n      className=\"ag-theme-material\"\n      style={{ height: \"50%\", width: \"100%\" }}\n      onDragOver={gridDragOver}\n      onDrop={gridDrop.bind(this)}\n    >\n      <Grid container>\n        <Grid item xs={1} />\n        <Grid item xs={10}>\n          <br />\n          <Typography align=\"center\" variant=\"h5\">\n            Save courses\n          </Typography>\n          <br />\n          <CompareGrid selectedClass={selectedClass} />\n\n          <Typography align=\"center\" variant=\"h5\">\n            Graph\n          </Typography>\n          <Grapher selectedClass={selectedClass} />\n        </Grid>\n        <Grid item xs={1} />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Compare;\n","import React from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport Find from \"./find/Find\";\nimport Compare from \"./compare/Compare\";\n\nconst Body = (props) => {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const { index } = props;\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={6}>\n        <Find\n          index={index}\n          searchTerm={searchTerm}\n          setSearchTerm={setSearchTerm}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <Compare index={index} searchTerm={searchTerm} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Body;\n","export const getSubstrings = (s) => {\n  const tokens = [];\n  for (let i = 1; i < s.length; ++i) tokens.push(s.slice(0, i));\n\n  return tokens;\n};\n\nexport const tokenizeCourseNum = (s) => {\n  // Split into department name (w/ no spaces) and course number, and then tokenizing both\n  // This assumes all course numbers start with a number\n  const firstIntIndex = s.search(/\\d/);\n  const deptString = s.slice(0, firstIntIndex).replace(\" \", \"\");\n  const numString = s.slice(firstIntIndex);\n\n  const result = [...getSubstrings(deptString), ...getSubstrings(numString)];\n  return result;\n};\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport NavBar from \"./header/NavBar\";\nimport Body from \"./body/Body\";\nimport { getSubstrings } from \"./tokenize\";\n\nconst FlexSearch = require(\"flexsearch\");\nlet serializedIndex = require(\"../data/gradeIndex.json\");\n\nconst index = new FlexSearch({\n  profile: \"balance\",\n  doc: {\n    id: \"id\",\n    field: {\n      course_name: {},\n      sems: {},\n      profs: {},\n      course_nbr: {},\n      dept: {tokenize: (s) => getSubstrings(s.replace(\" \", \"\"))},\n      sections: {},\n    },\n  },\n});\n\nindex.import(serializedIndex);\n\n// Allow for garbage collection?\nserializedIndex = undefined;\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Body index={index} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}